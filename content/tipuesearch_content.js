var tipuesearch = {"pages": [{'title': 'Weeks', 'text': 'week2-5 \n week6-9 \n week10-14 \n week15-18 \n', 'tags': '', 'url': 'Weeks.html'}, {'title': 'week2-5', 'text': 'Week2 \n 建立個人倉儲cad2019及編輯網站 \n 1.下載 2019Fall可攜套件.7z \xa0 2.建立cad2019 3.git clone \xa0https://github.com/s40723218/cad2019\xa0 4.git submodule add https://github.com/mdecourse/cmsimde.git\xa0 5.進入cmsimde後,輸入python -m pip install flask_cors 更改模組\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 6.python wsgi.py 進入近端進行編輯\xa0 7.編輯完成後git status\xa0>\xa0git add .\xa0>\xa0git commit -m "\xa0 \xa0 \xa0"\xa0>\xa0git push\xa0 \n 個人操作影片 \n \n \n \xa0 Week3 \n Solvespac e 編譯 \n 1.\xa0sh.exe 改名為 sh_rename_for_solvespace.exe。 2.git version 查驗 git 版本 3\xa0git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace 4.編譯Y:\\tmp\\solvespace\\extlib\\angle\\CMakeLists.txt comment out line 713 and 714 endif()(在713跟714前面加#)\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 5.手動編輯 libpng.dll.a 改名 libpng_static.a, 並放到編譯系統的 lib 目錄中\xa0 \n 6.cd solvespace->cd extlib->cd libpng->mkdir build->cd build->cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release->mingw32-make 7.最後回到solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 輸入cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release->mingw32-make \n 個人操作影片 \n \n Week4 \n 網站更新以及拍攝操作影片 \n 1.使用的錄影軟體 \xa0  ShareX \n \n 2.使用的上字幕及浮水印軟體 \xa0   ArcTime \n \n 3.浮水印 \n \n Week5 \n solvespace繪製練習 \n 1.使用快捷鍵(R)繪製出一個矩形 \n 2.使用快捷鍵(D)標註尺寸為40X30的矩形 \n 3.再繪製一個矩形在裡面 \n 4.使用快捷鍵(G) 使其變成綠色參照線 \n 5.利用快捷鍵(C)繪製4個圓孔 \n 6.點選2個圓孔並按下快捷鍵(Q)使其相等直徑，依序操作 \n 7.然後使用快捷鍵(D)標註尺寸以及快捷鍵(N)標註角度 \n 8.最後利用快捷鍵 shift+x 拉伸板子 ，並使用(D)設定厚度 \n 9.快捷鍵(W)為正視圖 ，快捷鍵 F3為等角圖 \n 完成圖 \n \n 個人操作影片 \n \n \n', 'tags': '', 'url': 'week2-5.html'}, {'title': 'week6-9', 'text': 'Week6 \n 1.繪製兩輪自走車 \n 完成圖 \n \n 個人操作影片 \n \n 2.網際V-rep模型控制 \n 個人操作影片 \n \n 3.新增啟動予停止按鈕 \n 個人操作影片 \n \n Week7 \n Solvespace 編譯與參數繪圖驗證 \n 1. Solvespace 編譯加入學號 \n 完成圖 \n \n 個人操作影片 \n \n 2.Solvespace\xa0參數繪圖驗證 \n (1) \n 完成圖 \n \n 個人操作影片 \n \n (3) \n 完成圖 \n \n 個人操作影片 \n \n (4) \n 完成圖 \n \n 個人操作影片 \n \n (6) \n 完成圖 \n \n 個人操作影片 \n \n (7) \n 完成圖 \n \n 個人操作影片 \n \n (8) \n 完成圖 \n \n 個人操作影片 \n \n (12) \n 完成圖 \n \n 個人操作影片 \n \n (13) \n 完成圖 \n \n 個人操作影片 \n \n (15) \n 完成圖 \n \n 個人操作影片 \n \n (18) \n 完成圖 \n \n 個人操作影片 \n \n Week8 \n 1.啟用CMSiMDE中的網誌系統 \n (1)開啟start_mdecourse.bat，輸入leo (2)將隨身系統裡的config裡面的pelican.leo用leo開啟 (3)到個人網站的blog的網址複製到@path . ./\xa0->\xa0Pelican設定\xa0->\xa0遠端中SITEURL (4)將DISQUS_SITENAME改為s40723218 cad2019 (5)在local_blog點選右鍵>點goto script將指令複製起來後輸入在 start_mdecourse.bat \n 個人操作影片 \n \n 2.導入Webots \n (1)下載 Webots_2019b_rev1.7z \xa0並解壓縮 \n (2)複製start_mdecourse.bat並改名為start_mdecourse_webots.bat \n (3)使用編譯器開啟start_mdecourse_webots.bat \n (4)輸入執行入徑 :set path_webots=%Disk%:\\Webots_2019b_rev1\\msys64\\mingw64\\bin;%Disk%:\\Webots_2019b_rev1\\msys64\\usr\\bin \n (5)在path_後面改為webots \n (6)輸入start D:\\Webots_2019b_rev1\\msys64\\mingw64\\bin\\webots.exe %* 即可Save \n (7)開啟start_mdecourse_webots.bat即可打開webots \n 個人操作影片 \n \n 3.ssh對github連線 \n 個人操作影片 \n \n Week9 \n 期中個人報告 \n \n', 'tags': '', 'url': 'week6-9.html'}, {'title': 'week10-14', 'text': 'Week10 \n 1.Soildworks/NX 各自簡單分析差異性 \n Soildworks介面較整齊，使用起來操作較為簡單，適合繪圖初學者使用，在業界受到廣泛使用，但是曲面建模以及模具方面較差。 \n NX的介面較為凌亂，使用起來比較難上手，但是適合用於模具方面加工以及複雜曲面。 \n 2.Solidworks, NX, Inventor 與 Creo (Pro/E) 的開發緣起/套件安裝/設定流程/零組件繪圖的相關差異與特點分析 : \n 負責章節9-10 \n 章節9 \n Auto-trol的公司發展歷程 Auto-trol Corporation由Bill Barnes和他的妻子Tammy於1962年成立，1960年我曾在科羅拉多州公路局工作過。極富創造力的工程師，總是想出新穎的創意產品和市場，其中一些實用，而有些則不那麼實用。該公司的名稱來自“自動控制”。其最初重點是建立工業控制系統，包括麵包房的控制設備。很快，Auto-trol便開始製造大型精密數字化儀，用於土木工程，製圖和電子設計應用。這些曾經是關於繪圖台的大小，並使用光學技術來跟踪光標位置。在1960年代，我偶爾會在貿易展覽會上遇到塔米該公司有一個展位，並將展示其數字化儀。大約在1970年，開始將其數字化儀直接連接到小型計算機系統，就像Calma同時按照第11章所述進行操作。 \n 到1980年的自動追踪軟件1979年初，Auto-trol提供了兩種軟件產品GS-100和GS-200。 GS-100是原始Auto-Draft軟件的擴展版本是在AD / 380系統上實施的，而GS-200是該公司最初的目標創建機械設計解決方案。 如果AD / 380系統同時具有這兩種軟件，則它將被稱為GS-300。 GS-100是非常好的生產繪圖套件，GS-200尚未準備就緒。 公司在測試站點，很明顯，Auto-trol的咬傷超過了它的咀嚼能力。1979年6月，Auto-trol與Manufacturing簽訂了軟件許可協議和諮詢服務將AD-2000用作新的機械設計解決方案的基礎被稱為GS-2000。 參見第15章。同時，GS-100更名為GS-1000和組合解決方案GS-3000。 首次安裝GS-2000是為了我在1980年初加入公司的時候。 \n 高級圖形工作站（AGW）–如前所述，Auto-trol的視覺上最易辨認的產品是其CC-80系列工作站，如先前所示當Auto-trol與OEM Apollo工作站簽署協議時，公司最初的反應是通過簡單地保持這些工作站的連續性用Apollo計算機替換原始的Auto-trol製造的控制邏輯，並圖形控制器。結果是生產了一個高效的工作站，不幸的是，對於新興的市場條件，該產品的定價過高。最終，Auto-trol決定標準Apollo工作站的價格更高比重新包裝的AGW更具競爭力。高級柵格工作站（ARW）–選擇Apollo平台之前，Auto-trol決定將其軟件移植到Digital的VAX計算機上。為此，公司需要彩色光柵工作站。最初，計劃是發展自己的光柵圖形功能。在Bill Brett的指導下，這項工作進展相當緩慢由Mho Salim和Jerry Peterson完成的大部分設計工作。最終決定第三方技術將是更好的選擇，該公司於1982年8月與Raster Technology簽訂了OEM協議， ARW中公司的圖形硬件。 \n 1990年–重大變革的一年每家公司都要經歷多個拐點方向有時會以無法預料的方式發生變化。自動追踪經歷了 1990年的拐點 •銷售和營銷副總裁Jerry Sisson離開了公司在1990年3月就職於Precision Visuals巨石。 •戴夫·漢納（Dave Hanna）擔任營銷副總裁，並發起了一次審查公司所在的每個細分市場。結論是專注於AEC領域並逐漸退出銷售機械設計和技術插圖系統。 •霍華德·希爾曼（Howard Hillman）直接接管了銷售業務。 •1990年1月，Auto-trol再次裁員，公司進軍積極的成本控制模式，包括減少6％的薪水。 •惠普（Hewlett-Packard）1989年對阿波羅（Apollo）的收購使它變得更加困難，但是並非不可能，就大型計算機硬件進行特殊交易談判政府採購。而且，憑藉其ME-10和ME-30封裝，惠普現在是一些機械交易的競爭對手。 •Auto-trol的許多軟件已移植到Sun工作站，並且公司開始競標Sun硬件。軟件開發也轉移到Sun平台上導致許多項目的延遲。 \n 戴夫·漢納（Dave Hanna）在1992年8月的一場慘烈的車禍中喪生。對我來說，這讓公司全心全意。霍華德繼續向君主注資即使在湯姆·拉弗蒂（Tom Rafferty）離開公司之後。有趣的是，比爾·布雷特（Bill Brett）被重新僱用了並接管了Monarch的管理以及其餘的大部分研發工作。1993年左右，Auto-trol與一家位於德克薩斯州休斯頓的軟件公司建立了聯繫蘇珊·弗洛伊德（Susan Floyd）。弗洛伊德（Floyd）已開發了技術信息管理包，而在肯尼迪航天中心為洛克希德公司工作。 Auto-trol最終獲得了在休斯敦運營，並將該軟件作為CENTRA 2000銷售。當前的另一個產品是KONFIG，它是衍生出的網絡管理軟件包。來自前面提到的TEAMS軟件包。在2002年9月，Auto-trol更改了Centra 2000的名稱改為KONFIG Configuration Management。在2001財政年度，有詳細數據可用的年份，該公司銷售的軟件不到200萬美元。Auto-trol的收入餘額來自與軟件相關的維護服務和早期出售的硬件。令人驚訝的是，該公司仍然花費近6美元每年研發投入上百萬美元。在整個1990年代，Hillman繼續向公司貸款，然後 將貸款轉換為股票。到2001年9月30日，他擁有未償還債務的99.4％公司股票，並在2002年初宣佈公司被收購私人的。仍由公眾股東擁有的股票以每股0.20美元的價格購買。在幾年前以1:10進行反向股票分割之後，這意味著該股票的賣出相當於1980年的615美元，相當於其22年銷售收入的0.03％較早。在2007年中期編寫此文件時，Hillman仍在運行Auto-trol。的公司的主要軟件產品仍然是KONFIG配置管理軟件和Tech Illustrator。 Auto-trol繼續銷售GIS軟件，主要在加拿大，以及主要在德國的加工廠設計軟件。 \n 章節10 \n 賓利系統公司 杜邦公司的工程學是1980年代初期鷹圖的主要客戶之一特拉華州威爾明頓市的部門。 凱斯·本特利（Keith Bentley）在杜邦工作之後在特拉華大學獲得電氣工程學士學位，並在佛羅里達大學。 杜邦正在使用其Intergraph系統進行生產其過程工廠的電氣圖。 但是，使用受到高增加更多座位的座位成本。基思（Keith）相信還有一種成本更低的選擇，他會根據自己的時間出發開發一個名為PseudoStation的軟件包，該軟件包使用戶能夠訪問鷹圖的CAD軟件來自低成本的DEC VT-100終端，配備了圖形卡或Tektronix存儲管端子。 事實證明PseudoStation是當杜邦設計師只想對現有工程圖，例如更改工程圖上的某些文本。 \n 賓利（Bentley）成為一家真正的公司1987年，鷹圖（Intergraph）開始銷售Bentley的MicroStation軟件後，Bentley基本上停留在後台，專注於軟件開發。 公司花費很少的精力來提高媒體對Bentley作為業務實體的認識。 這開始在1992年夏季發生了變化。在當年的A / E / C SYSTEMS會議之後不久，Bentley邀請了涉及CAD行業的大多數出版物的代表來公司總部位於賓夕法尼亞州埃克斯頓。 雖然有些鷹圖高管在那裡，該活動基本上由Bentley員工和經理。 \n 賓利從鷹圖分裂到1992年，鷹圖高管開始意識到其業務的本質是開始改變。 直到那時，MicroStation還是幫助Intergraph銷售的工具大型集成系統。 總體而言，這個軟件包僅構成一個中等級別典型系統銷售總收入的一部分。 硬件，應用軟件和服務所佔的比例要大得多。 鷹圖主要看到它的競爭是其他大型系統供應商，例如Computervision，IBM和EDS / Unigraphics。 \n Bentley進入應用領域一旦Bentley從Intergraph建立獨立，該公司便開始成為各種圖形和數據管理應用程序的供應商不僅僅是基本CAD軟件的供應商。 當時，Autodesk還在同樣的舉動。 賓利採取了兩種方法來在應用領域。 一方面，公司開始建立內部發展員工，與此同時，它與員工建立了許多“戰略關係”。由1994年至1996年的獨立軟件公司集團。 \n 新的應用程序開始流行到1997年年底，Bentley似乎有了新的發展產品的推出步伐加快。 1997年12月，本特利（Bentley）收購了雅各布（Jacobus）尚未擁有的其餘部分，雅各布（Jacobus）成為完全擁有的子公司。 PlantSpace包含兩組軟件產品，程序可用於管理工廠設計軟件的設計數據是否已創建是否使用Jacobus軟件以及用於設計加工廠的程序。 這大部分該軟件是使用該公司的JSpace面向對象軟件開發的 技術。 \n Infrasoft –賓利民用產品線的第三站自Bentley於2003年收購Infrasoft以來，這可能是一個描述的好地方該公司及其前身MOSS Systems，Ltd.。這個故事始於美國1973年成為英國王國，當時英格蘭南部的三個縣議會決定發展自己的高速公路設計軟件。這些理事會很像州的DOT美國。當時幾乎沒有可用於道路設計的軟件，特別是符合英國標準的軟件。該小組的設計軟件的第一版發佈於1975年。當時的工程解決方案，稱為MOSS的軟件包是面向批次的並同時在大型機和大型微型計算機上運行。 1983年 開發商離開了政府職位，並成立了MOSS Systems，Ltd.進行開發和向政府機構和私人工程公司銷售該軟件。在幾內幾年來，英國50個縣議會中有49個使用了MOSS。 Infrasoft將原始MOSS軟件更名為MX Series，並將其模塊用於道路設（MXROAD），路面更新（MXRENEW），鐵路工程（MXRAIL）和站點工程（MXSITE）。它與AutoCAD和MicroStation，儘管在1990年代後期，Infrasoft傾向於選擇與 自Bentley成為GEOPAK的直接競爭對手以來的Autodesk。圖10.3顯示了使用MXROAD設計典型的道路交叉口。Bentley在2003年1月宣布，它計劃收購Infrasoft和一些幾個月後交易完成。在某種程度上，本特利可能已經採取了此舉防止Autodesk收購Infrasoft並在民用領域更有效地競爭市場。這三個民用產品線均由Gabe Norona和開發人員管理開始努力創建新的高速公路設計應用程序，最終將將軟件包的最佳特性合併到一套新的土木工程程序中。 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'week10-14.html'}, {'title': 'week15-18', 'text': '', 'tags': '', 'url': 'week15-18.html'}, {'title': 'Note', 'text': '', 'tags': '', 'url': 'Note.html'}, {'title': 'Phthon語法', 'text': '\n "#" 符號後是註解 ( comment ) ，可以在一列的開頭或中間加入 \n reserved word or built-in function( 變數取名請避開) and，exec，not，as，finally，or，assert，for，pass，except，break，from，print，class，global，raise，continue，if，return，def，import，try，del，in，while，elif，is，with，else，lambda，yield \n 縮排視為不同的block(在IF判斷是或迴圈的段落中使用)，縮排可以用tab或是數個空格( ≧ 1 )，空格的數量不同，是為不同的block ( bug 容易因為這一點而產生 ) \n python 的每個變數視為一個 object \n python variables 不需要事先宣告變數，直接用"=" assign value ( 賦值 ) 即可，例如： x = 3.14 → 實數變數 \n 變數類型 ( data type ) 根據被賦予的值決定 ( 之後若是被分配不同類型的數值，該變數的類型會直接改變 ) 例如：x = \'text\' → 字串變數 \n \n \n', 'tags': '', 'url': 'Phthon語法.html'}, {'title': 'Solvespace常用快捷鍵', 'text': '草圖 \n S\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0線段 \n R\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0矩形 \n C\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0圓 \n A\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0圓弧 \n T\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0真型字體本文 \n B\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0三次曲線樣條 \n P\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0基準點 \n G\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 切換構造 \n I\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 在相交處分割線/曲線 \n Shift+A\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0選定點之切線弧\xa0 \n 拘束 \n D\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0距離/長度/直徑 \n H\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0設定水平 \n N\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0角度 \n L\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 設定兩線段平行或切線 \n [\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0設定兩線段垂直 \n Y\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 設定對稱 \n Q \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 設定等長/角度/半徑 \n X\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 設定法線方向相同 \n U\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 設定其他輔助角 \n E\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0切換參考尺寸 \n O\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 點在線上/點上/平面上/曲面上 \n 組成 \n Shift+X\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0拉伸草圖 \n Shift+L\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0旋轉拉伸草圖 \n Shift+T\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0逐步放置 \n Shift+R\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0逐步旋轉 \n Shift+3\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa03D素描 \n Shift+W\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0新的工作平面 \n Shift+I\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 導入連接/組合文件 \n 視角 \n F3\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 等角視圖 \n W\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0正視圖 \n \n \n \n \n \n \n \xa0 \n \n \xa0 \n \n \n \n \xa0 \n \n', 'tags': '', 'url': 'Solvespace常用快捷鍵.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules \xa0 https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}]};